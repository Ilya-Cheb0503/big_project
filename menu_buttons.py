import logging

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes

from constants import *

from test_db import get_user_from_db, update_user_in_db

async def main_start_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    text = '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é'
    if user_id in admins_id:
        user = await get_user_from_db(user_id)
        if user:
                await update_user_in_db(user_id, menu_state='–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
                context.user_data['menu_state'] = '–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
                text = '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é'
        keyboard = [
                ['–í–∞–∫–∞–Ω—Å–∏–∏'],
                ['–û –∫–æ–º–ø–∞–Ω–∏–∏'],
                ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
                ['–õ–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è'],
                ['–ö–æ–Ω—Ç–∞–∫—Ç—ã'],
                ['–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞']
            ]
    else:
        context.user_data['menu_state'] = '–ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        await update_user_in_db(user_id, menu_state='–ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        keyboard = [
                ['–í–∞–∫–∞–Ω—Å–∏–∏'],
                ['–û –∫–æ–º–ø–∞–Ω–∏–∏'],
                ['–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã'],
                ['–õ–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è'],
                ['–ö–æ–Ω—Ç–∞–∫—Ç—ã'],
            ]
    # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_text(text, reply_markup=reply_markup)


async def show_admin_options(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    
    keyboard = [
        ['–†–∞—Å—Å—ã–ª–∫–∞'],
        ['–ù–∞–∑–∞–¥']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é', reply_markup=reply_markup)


async def show_vacancies(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–ú–µ–Ω—é –≤–∞–∫–∞–Ω—Å–∏–π')
    context.user_data['menu_state'] = '–ú–µ–Ω—é –≤–∞–∫–∞–Ω—Å–∏–π'
    if 'vacancies_proccess' in context.user_data:
        context.user_data.pop('vacancies_proccess')
    
    keyboard = [
        ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏'],
        ['–ö–∞—Ç–µ–≥–æ—Ä–∏–∏'],
        ['–í–∞–∫–∞–Ω—Å–∏–∏ –±–µ–∑ –æ–ø—ã—Ç–∞'],
        ['–ù–∞–∑–∞–¥']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞–∫–∞–Ω—Å–∏–π', reply_markup=reply_markup)


async def show_all_vacancies_sure(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='SURE?')
    
    
    keyboard = [
        ['–†–∏—Å–∫–Ω—É'],
        ['–ù–∞–∑–∞–¥'],

    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    count = context.user_data['vacancies_count']
    
    warning_text = (
        '–í–Ω–∏–º–∞–Ω–∏–µ‚ÄºÔ∏è\n\n'
        f'–ê–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π —Å–µ–π—á–∞—Å: {count}\n\n'
        '–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏?')

    await update.message.reply_text(warning_text, reply_markup=reply_markup)


async def show_categories(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π')

    
    keyboard = [
        ['–¢–≠–¶'],
        ['–û—Ñ–∏—Å'],
        ['–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞'],
        ['–ù–∞–∑–∞–¥']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=reply_markup)


async def show_power_vacancies(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–ú–µ–Ω—é –≤–∞–∫–∞–Ω—Å–∏–π –¢–≠–¶')
    
    
    keyboard = [
        ['–¢–µ–ø–ª–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞', '–≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞'],
        ['–ê–°–£ –¢–ü', '–†–ó–ê'],
        ['–†–µ–º–æ–Ω—Ç', '–•–∏–º–∏—è'],
        ['HR', '–ò–¢'],
        ['–≠–∫–æ–Ω–æ–º–∏–∫–∞', '–°–±—ã—Ç'],
        ['–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ—Ö—Ä–∞–Ω–∞ —Ç—Ä—É–¥–∞'],
        ['–î—Ä—É–≥–æ–µ', '–ù–∞–∑–∞–¥']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=reply_markup)


async def show_office_vacancies(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–ú–µ–Ω—é –≤–∞–∫–∞–Ω—Å–∏–π –æ—Ñ–∏—Å')
    
    
    keyboard = [
        ['–ó–∞–∫—É–ø–∫–∏', '–≠–∫–æ–Ω–æ–º–∏–∫–∞'],
        ['HR', '–°–±—ã—Ç', '–ò–¢'],
        ['–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è', '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'],
        ['–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ—Ö—Ä–∞–Ω–∞ —Ç—Ä—É–¥–∞'],
        ['–ù–∞–∑–∞–¥']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=reply_markup)


async def show_about_company(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–û –∫–æ–º–ø–∞–Ω–∏–∏')
    
    
    keyboard = [
        ['–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã'],
        ['–§–∏–ª–∏–∞–ª—ã'],
        ['–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã'],
        ['–ù–∞–∑–∞–¥'],
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    

    await update.message.reply_text(company_text, reply_markup=reply_markup)


async def show_motivations_programms(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã')
    
    
    keyboard = [
        ['–ö–∞–¥—Ä–æ–≤—ã–π —Ä–µ–∑–µ—Ä–≤'],
        ['–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞ —Å—á–µ—Ç —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è'],
        ['–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞'],
        ['–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è'],
        ['–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫—É–ª—å—Ç—É—Ä–Ω–æ-–º–∞—Å—Å–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'],
        ['–°–æ–≤–µ—Ç –º–æ–ª–æ–¥—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤'],
        ['–ù–∞–∑–∞–¥'],
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    

    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç', reply_markup=reply_markup)


async def show_FAQ(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    await update_user_in_db(user_id, menu_state='–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã')
    
    
    keyboard = [
        ['üíº –ü–æ –∫–∞–∫–æ–º—É –≥—Ä–∞—Ñ–∏–∫—É —è –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å?'],
        ['üí∞ –ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã –º–Ω–µ –æ–∂–∏–¥–∞—Ç—å?'],
        ['üè† –ö–∞–∫–∏–µ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –¥–ª—è –∏–Ω–æ–≥–æ—Ä–æ–¥–Ω–∏—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤?'],
        ['üõ°Ô∏è –ö–∞–∫–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ú–æ—Å—ç–Ω–µ—Ä–≥–æ?'],
        ['üìç –ê–¥—Ä–µ—Å–∞ –¢–≠–¶ –ú–æ—Å—ç–Ω–µ—Ä–≥–æ –ì–≠–°-1'],
        ['üë©‚Äçüè´ –ù–∞ –∫–∞–∫–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ –±–µ–∑ –æ–ø—ã—Ç–∞?'],
        ['üìù –ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –º–Ω–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –ø—Ä–∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ?'],
        ['üöÄ –ï—Å—Ç—å –ª–∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞?'],
        ['–ù–∞–∑–∞–¥'],

    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å', reply_markup=reply_markup)

